class Solution{
public:	
	int findKRotation(int nums[], int n) {
        int l = 0;
        int h = n - 1;
        int mid = (l+h)/2;
        int ans = INT_MAX;
        int index = -1;
        while(l<=h)
        {
            if(nums[l] <= nums[h])
            {
                if(nums[l] < ans)
                {
                    index = l;
                    ans = nums[l];
                }
                break;
            }
            if(nums[l]<=nums[mid])
            {
                if(nums[l] < ans)
                {
                    index = l;
                    ans = nums[l];
                }
                l = mid + 1;
            }
            else{
                if(nums[mid] < ans)
                {
                    index = mid;
                    ans = nums[mid];
                }
                h = mid - 1;
            }
            mid = (l+h)/2;
        }
        return index;
	}

};
