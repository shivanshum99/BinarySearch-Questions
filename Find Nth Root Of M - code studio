// int fun(int val, int n){
//   long long ans = 1;
//   while(n>0){
//     if(n%2==1){
//       ans = ans * val;
//       n = n-1;
//     }
//     else{
//       val = val * val;
//       n = n/2;
//     }
//   }
//   return ans;
// }
//return 1 if it is equal to m
//return 0 if < m
//return 2 if > m
int fun(int mid, int n, int m){
  long long ans = 1;
  for(int i =1; i<=n; i++)
  {
    ans = ans*mid;
    if(ans > m)return 2;
  }
  if(ans == m) return 1;
  return 0;
}
int NthRoot(int n, int m) {
  int l = 1;
  int h = m;
  int mid = (l+h)/2;

  while(l<=h)
  {
    int val = fun(mid,n,m);
    if(val==1) return mid;
    else if(val==0) l = mid+1;
    else h = mid - 1; 
    mid = (l+h)/2;
  }
  return -1;
}
