class Solution {
public:
    int possible(vector<int>& arr, int mid)
    {
        //nod->no. of days
        int n = arr.size();
        int nod = 1;
        int cnt = 0;

        for(int i = 0; i<n; i++){
            cnt += arr[i];
            if(cnt > mid){
                nod += 1;
                cnt = arr[i];
            }
            
        }
        return nod;
    }
    int shipWithinDays(vector<int>& weights, int days) {
        int l = *max_element(weights.begin(), weights.end());
        int h = accumulate(weights.begin(), weights.end(), 0);;
        int ans = 0;
        while(l<=h)
        {
            int mid = (l+h)/2;
            if(possible(weights, mid)<=days)
            {
                ans = mid;
                h = mid - 1;
            }
            else{
                l = mid + 1;
            }
        }
        return l; //or l;
    }
};
