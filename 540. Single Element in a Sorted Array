class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int n = nums.size();
        int l = 1;
        int h = n-2;
        int mid = (l+h)/2;

        if(n==1){
            return nums[0];
        }
        if(nums[0]!=nums[1]){
            return nums[0];
        }
        if(nums[n-1]!=nums[n-2]){
            return nums[n-1];
        }

        while(l<=h)
        {
            if((nums[mid]!=nums[mid+1]) && nums[mid]!=nums[mid-1])
            {
                return nums[mid];
            }
            //we are on left
            if((mid%2==1 && nums[mid]==nums[mid-1]) || (mid%2==0 && nums[mid]==nums[mid+1]))
            {
                l = mid+1;
            }
            else{
                h = mid-1;
            }
            mid = (l+h)/2;
        }
        return -1;
    }
};
